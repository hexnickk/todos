{"mappings":";AAGA,OAAO,IAAI,uCAAwC,MAAM,QAaxD,CAAC;ACbF,gCACI,GAAG,EAAE,iBAAiB,GAAG,CAAC,EAC1B,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,OAAO,QActC","sources":["src/debounce.hook.ts","src/click-outside.hook.ts","index.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n// reference -> https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport let useDebounceValue = <T>(value: T, delay: number) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n","import { useEffect, MutableRefObject } from \"react\";\n\n// reference -> https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\nexport function useClickOutside(\n    ref: MutableRefObject<any>,\n    callback: (event: Event) => unknown\n) {\n    useEffect(() => {\n        function handleClickOutside(event: Event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                callback?.(event);\n            }\n        }\n\n        document.addEventListener(\"click\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"click\", handleClickOutside);\n        };\n    }, [ref, callback]);\n}\n","export * from \"./src/debounce.hook\";\nexport * from \"./src/click-outside.hook\";\n"],"names":[],"version":3,"file":"index.d.ts.map"}